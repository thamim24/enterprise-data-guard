{"version":3,"file":"static/js/795.3f2162ee.chunk.js","mappings":"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","sources":["components/UploadForm.jsx","pages/UserDashboard.jsx"],"sourcesContent":["import React, { useState, useRef, useCallback, useMemo } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst UploadForm = ({ userDepartment, onUploadSuccess }) => {\r\n  const [selectedFiles, setSelectedFiles] = useState([]);\r\n  const [department, setDepartment] = useState(userDepartment);\r\n  const [uploading, setUploading] = useState(false);\r\n  const [uploadProgress, setUploadProgress] = useState({});\r\n  const [message, setMessage] = useState('');\r\n  const [dragActive, setDragActive] = useState(false);\r\n  const fileInputRef = useRef(null);\r\n\r\n  const departments = ['HR', 'Finance', 'Legal', 'IT', 'Operations'];\r\n  const maxFileSize = 10 * 1024 * 1024; // 10MB\r\n  const allowedTypes = useMemo(() => ['.txt', '.pdf', '.doc', '.docx', '.xlsx', '.pptx', '.jpg', '.png'], []);\r\n\r\n  const validateFile = useCallback((file) => {\r\n  const errors = [];\r\n\r\n  // Check file size\r\n  if (file.size > maxFileSize) {\r\n    errors.push(`File \"${file.name}\" exceeds 10MB limit`);\r\n  }\r\n\r\n  // Check file type\r\n  const fileExtension = '.' + file.name.split('.').pop().toLowerCase();\r\n  if (!allowedTypes.includes(fileExtension)) {\r\n    errors.push(`File \"${file.name}\" has unsupported format. Allowed: ${allowedTypes.join(', ')}`);\r\n  }\r\n\r\n  return errors;\r\n}, [maxFileSize, allowedTypes]);\r\n\r\n\r\n  \r\n  const handleFiles = useCallback((files) => {\r\n  const fileList = Array.from(files);\r\n  const validFiles = [];\r\n  const errors = [];\r\n\r\n  fileList.forEach(file => {\r\n    const fileErrors = validateFile(file);\r\n    if (fileErrors.length === 0) {\r\n      const isDuplicate = selectedFiles.some(existingFile => \r\n        existingFile.name === file.name && existingFile.size === file.size\r\n      );\r\n      if (!isDuplicate) {\r\n        validFiles.push({\r\n          file: file,\r\n          id: Date.now() + Math.random(),\r\n          name: file.name,\r\n          size: file.size,\r\n          type: file.type,\r\n          status: 'pending'\r\n        });\r\n      } else {\r\n        errors.push(`File \"${file.name}\" is already selected`);\r\n      }\r\n    } else {\r\n      errors.push(...fileErrors);\r\n    }\r\n  });\r\n\r\n  if (validFiles.length > 0) {\r\n    setSelectedFiles(prev => [...prev, ...validFiles]);\r\n    setMessage('');\r\n  }\r\n\r\n  if (errors.length > 0) {\r\n    setMessage(errors.join('. '));\r\n  }\r\n}, [selectedFiles, validateFile]);\r\n\r\n\r\n  const handleDrag = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    if (e.type === \"dragenter\" || e.type === \"dragover\") {\r\n      setDragActive(true);\r\n    } else if (e.type === \"dragleave\") {\r\n      setDragActive(false);\r\n    }\r\n  }, []);\r\n\r\n  const handleDrop = useCallback((e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    setDragActive(false);\r\n    \r\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\r\n      handleFiles(e.dataTransfer.files);\r\n    }\r\n  }, [handleFiles]);\r\n\r\n  const handleFileSelect = (e) => {\r\n    if (e.target.files && e.target.files.length > 0) {\r\n      handleFiles(e.target.files);\r\n    }\r\n  };\r\n\r\n  const removeFile = (fileId) => {\r\n    setSelectedFiles(prev => prev.filter(file => file.id !== fileId));\r\n    setUploadProgress(prev => {\r\n      const newProgress = { ...prev };\r\n      delete newProgress[fileId];\r\n      return newProgress;\r\n    });\r\n  };\r\n\r\n  const formatFileSize = (bytes) => {\r\n    if (bytes === 0) return '0 Bytes';\r\n    const k = 1024;\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB'];\r\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\r\n  };\r\n\r\n  const getFileIcon = (fileName) => {\r\n    const extension = fileName.split('.').pop().toLowerCase();\r\n    const iconMap = {\r\n      'pdf': '📄',\r\n      'doc': '📝', 'docx': '📝',\r\n      'txt': '📄',\r\n      'xlsx': '📊', 'xls': '📊',\r\n      'pptx': '📊', 'ppt': '📊',\r\n      'jpg': '🖼️', 'jpeg': '🖼️', 'png': '🖼️', 'gif': '🖼️'\r\n    };\r\n    return iconMap[extension] || '📁';\r\n  };\r\n\r\n  const uploadSingleFile = async (fileData) => {\r\n    const formData = new FormData();\r\n    formData.append('file', fileData.file);\r\n    formData.append('department', department);\r\n\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.post('http://localhost:8000/api/documents/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${token}`\r\n        },\r\n        onUploadProgress: (progressEvent) => {\r\n          const progress = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n          setUploadProgress(prev => ({\r\n            ...prev,\r\n            [fileData.id]: progress\r\n          }));\r\n        }\r\n      });\r\n\r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      return { \r\n        success: false, \r\n        error: error.response?.data?.detail || 'Upload failed' \r\n      };\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (selectedFiles.length === 0) {\r\n      setMessage('Please select files to upload');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n    setMessage('');\r\n\r\n    const results = [];\r\n    let successCount = 0;\r\n    let errorCount = 0;\r\n\r\n    // Update file status to uploading\r\n    setSelectedFiles(prev => \r\n      prev.map(file => ({ ...file, status: 'uploading' }))\r\n    );\r\n\r\n    // Upload files sequentially to avoid overwhelming the server\r\n    for (const fileData of selectedFiles) {\r\n      const result = await uploadSingleFile(fileData);\r\n      \r\n      if (result.success) {\r\n        successCount++;\r\n        setSelectedFiles(prev => \r\n          prev.map(file => \r\n            file.id === fileData.id \r\n              ? { ...file, status: 'completed' }\r\n              : file\r\n          )\r\n        );\r\n      } else {\r\n        errorCount++;\r\n        setSelectedFiles(prev => \r\n          prev.map(file => \r\n            file.id === fileData.id \r\n              ? { ...file, status: 'error', error: result.error }\r\n              : file\r\n          )\r\n        );\r\n      }\r\n      \r\n      results.push({ file: fileData, result });\r\n    }\r\n\r\n    setUploading(false);\r\n\r\n    // Show summary message\r\n    if (successCount > 0 && errorCount === 0) {\r\n      setMessage(`✅ Successfully uploaded ${successCount} file(s)!`);\r\n      // Clear successful uploads after a delay\r\n      setTimeout(() => {\r\n        setSelectedFiles(prev => prev.filter(file => file.status !== 'completed'));\r\n        setUploadProgress({});\r\n      }, 3000);\r\n    } else if (successCount > 0 && errorCount > 0) {\r\n      setMessage(`⚠️ ${successCount} files uploaded successfully, ${errorCount} failed`);\r\n    } else {\r\n      setMessage(`❌ All uploads failed. Please check file requirements.`);\r\n    }\r\n\r\n    if (onUploadSuccess && successCount > 0) {\r\n      onUploadSuccess();\r\n    }\r\n  };\r\n\r\n  const clearAllFiles = () => {\r\n    setSelectedFiles([]);\r\n    setUploadProgress({});\r\n    setMessage('');\r\n    if (fileInputRef.current) {\r\n      fileInputRef.current.value = '';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Department Selection */}\r\n        <div className=\"form-group\" style={{ marginBottom: '20px' }}>\r\n          <label style={{ display: 'block', marginBottom: '8px', fontWeight: 'bold' }}>\r\n            🏢 Target Department:\r\n          </label>\r\n          <select\r\n            value={department}\r\n            onChange={(e) => setDepartment(e.target.value)}\r\n            style={{\r\n              width: '100%',\r\n              padding: '10px',\r\n              border: '1px solid #ddd',\r\n              borderRadius: '4px',\r\n              fontSize: '14px'\r\n            }}\r\n            required\r\n          >\r\n            {departments.map(dept => (\r\n              <option key={dept} value={dept}>{dept}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n\r\n        {/* Drag and Drop Area */}\r\n        <div\r\n          className={`drag-drop-area ${dragActive ? 'active' : ''}`}\r\n          onDragEnter={handleDrag}\r\n          onDragLeave={handleDrag}\r\n          onDragOver={handleDrag}\r\n          onDrop={handleDrop}\r\n          onClick={() => fileInputRef.current?.click()}\r\n          style={{\r\n            border: `2px dashed ${dragActive ? '#007bff' : '#ddd'}`,\r\n            borderRadius: '8px',\r\n            padding: '40px 20px',\r\n            textAlign: 'center',\r\n            cursor: 'pointer',\r\n            backgroundColor: dragActive ? '#f0f8ff' : '#f8f9fa',\r\n            transition: 'all 0.3s ease',\r\n            marginBottom: '20px'\r\n          }}\r\n        >\r\n          <div style={{ fontSize: '48px', marginBottom: '16px' }}>\r\n            {dragActive ? '📂' : '📁'}\r\n          </div>\r\n          <h3 style={{ margin: '0 0 8px 0', color: '#333' }}>\r\n            {dragActive ? 'Drop files here!' : 'Drag & drop files here'}\r\n          </h3>\r\n          <p style={{ margin: '0', color: '#666', fontSize: '14px' }}>\r\n            or <span style={{ color: '#007bff', textDecoration: 'underline' }}>browse files</span>\r\n          </p>\r\n          <p style={{ margin: '8px 0 0 0', fontSize: '12px', color: '#888' }}>\r\n            Supported: {allowedTypes.join(', ')} • Max size: 10MB each\r\n          </p>\r\n        </div>\r\n\r\n        {/* Hidden File Input */}\r\n        <input\r\n          ref={fileInputRef}\r\n          type=\"file\"\r\n          multiple\r\n          onChange={handleFileSelect}\r\n          accept={allowedTypes.join(',')}\r\n          style={{ display: 'none' }}\r\n        />\r\n\r\n        {/* Selected Files List */}\r\n        {selectedFiles.length > 0 && (\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '15px' }}>\r\n              <h4 style={{ margin: 0 }}>📎 Selected Files ({selectedFiles.length})</h4>\r\n              <button\r\n                type=\"button\"\r\n                onClick={clearAllFiles}\r\n                style={{\r\n                  background: 'none',\r\n                  border: '1px solid #dc3545',\r\n                  color: '#dc3545',\r\n                  padding: '4px 8px',\r\n                  borderRadius: '4px',\r\n                  cursor: 'pointer',\r\n                  fontSize: '12px'\r\n                }}\r\n              >\r\n                🗑️ Clear All\r\n              </button>\r\n            </div>\r\n\r\n            <div style={{ maxHeight: '300px', overflowY: 'auto', border: '1px solid #ddd', borderRadius: '4px' }}>\r\n              {selectedFiles.map((fileData) => (\r\n                <div\r\n                  key={fileData.id}\r\n                  style={{\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    padding: '12px 16px',\r\n                    borderBottom: '1px solid #eee',\r\n                    backgroundColor: fileData.status === 'error' ? '#fff5f5' : \r\n                                   fileData.status === 'completed' ? '#f0fff4' : 'white'\r\n                  }}\r\n                >\r\n                  <span style={{ fontSize: '20px', marginRight: '12px' }}>\r\n                    {getFileIcon(fileData.name)}\r\n                  </span>\r\n                  \r\n                  <div style={{ flex: 1, minWidth: 0 }}>\r\n                    <div style={{ \r\n                      fontWeight: 'bold', \r\n                      marginBottom: '4px',\r\n                      whiteSpace: 'nowrap',\r\n                      overflow: 'hidden',\r\n                      textOverflow: 'ellipsis'\r\n                    }}>\r\n                      {fileData.name}\r\n                    </div>\r\n                    <div style={{ fontSize: '12px', color: '#666' }}>\r\n                      {formatFileSize(fileData.size)}\r\n                    </div>\r\n                    \r\n                    {/* Progress Bar */}\r\n                    {fileData.status === 'uploading' && uploadProgress[fileData.id] !== undefined && (\r\n                      <div style={{ marginTop: '8px' }}>\r\n                        <div style={{ \r\n                          width: '100%', \r\n                          height: '4px', \r\n                          backgroundColor: '#e0e0e0', \r\n                          borderRadius: '2px',\r\n                          overflow: 'hidden'\r\n                        }}>\r\n                          <div\r\n                            style={{\r\n                              width: `${uploadProgress[fileData.id]}%`,\r\n                              height: '100%',\r\n                              backgroundColor: '#007bff',\r\n                              transition: 'width 0.3s ease'\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div style={{ fontSize: '11px', color: '#666', marginTop: '2px' }}>\r\n                          {uploadProgress[fileData.id]}% uploaded\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {/* Error Message */}\r\n                    {fileData.status === 'error' && (\r\n                      <div style={{ fontSize: '12px', color: '#dc3545', marginTop: '4px' }}>\r\n                        ❌ {fileData.error}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n                  {/* Status Icon */}\r\n                  <div style={{ marginLeft: '12px', fontSize: '16px' }}>\r\n                    {fileData.status === 'pending' && '⏳'}\r\n                    {fileData.status === 'uploading' && '⬆️'}\r\n                    {fileData.status === 'completed' && '✅'}\r\n                    {fileData.status === 'error' && '❌'}\r\n                  </div>\r\n\r\n                  {/* Remove Button */}\r\n                  {fileData.status !== 'uploading' && (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => removeFile(fileData.id)}\r\n                      style={{\r\n                        background: 'none',\r\n                        border: 'none',\r\n                        color: '#dc3545',\r\n                        cursor: 'pointer',\r\n                        marginLeft: '8px',\r\n                        fontSize: '16px'\r\n                      }}\r\n                      title=\"Remove file\"\r\n                    >\r\n                      ✕\r\n                    </button>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Status Message */}\r\n        {message && (\r\n          <div \r\n            className={`alert ${message.includes('✅') ? 'alert-success' : \r\n                              message.includes('⚠️') ? 'alert-warning' : 'alert-danger'}`}\r\n            style={{ marginBottom: '20px' }}\r\n          >\r\n            {message}\r\n          </div>\r\n        )}\r\n\r\n        {/* Upload Button */}\r\n        <div style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\r\n          <button \r\n            type=\"submit\" \r\n            className=\"btn btn-success\"\r\n            disabled={uploading || selectedFiles.length === 0}\r\n            style={{ \r\n              padding: '12px 24px',\r\n              fontSize: '16px',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              gap: '8px'\r\n            }}\r\n          >\r\n            {uploading ? (\r\n              <>\r\n                <span>⏳</span>\r\n                Uploading... ({selectedFiles.filter(f => f.status === 'completed').length}/{selectedFiles.length})\r\n              </>\r\n            ) : (\r\n              <>\r\n                <span>📤</span>\r\n                Upload {selectedFiles.length} File{selectedFiles.length !== 1 ? 's' : ''}\r\n              </>\r\n            )}\r\n          </button>\r\n\r\n          {selectedFiles.length > 0 && !uploading && (\r\n            <div style={{ fontSize: '14px', color: '#666' }}>\r\n              Total size: {formatFileSize(selectedFiles.reduce((sum, file) => sum + file.size, 0))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {/* Upload Guidelines */}\r\n      <div style={{ \r\n        marginTop: '25px', \r\n        padding: '15px', \r\n        background: '#e9ecef', \r\n        borderRadius: '6px',\r\n        fontSize: '13px'\r\n      }}>\r\n        <h4 style={{ margin: '0 0 10px 0', color: '#495057' }}>📋 Upload Guidelines</h4>\r\n        <ul style={{ margin: 0, paddingLeft: '18px', color: '#6c757d' }}>\r\n          <li>Supported formats: {allowedTypes.join(', ')}</li>\r\n          <li>Maximum file size: 10MB per file</li>\r\n          <li>Multiple files can be uploaded simultaneously</li>\r\n          <li>Files are automatically scanned for security threats</li>\r\n          <li>Cross-department uploads require admin approval</li>\r\n          <li>All uploads are logged and monitored</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadForm;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport UploadForm from '../components/UploadForm';\r\nimport '../styles/upload.css';\r\n\r\nconst UserDashboard = ({ user, onLogout }) => {\r\n  const [documents, setDocuments] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchDocuments = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get('http://localhost:8000/api/documents/list', {\r\n        headers: { Authorization: `Bearer ${token}` }\r\n      });\r\n      setDocuments(response.data.documents);\r\n    } catch (error) {\r\n      setError('Failed to fetch documents');\r\n      console.error(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDocuments();\r\n  }, []);\r\n\r\n  const handleDownload = async (docId, filename) => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      const response = await axios.get(`http://localhost:8000/api/documents/download/${docId}`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n        responseType: 'blob'\r\n      });\r\n      \r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', filename);\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.remove();\r\n    } catch (error) {\r\n      alert(error.response?.data?.detail || 'Download failed');\r\n    }\r\n  };\r\n\r\n  const handleUploadSuccess = () => {\r\n    fetchDocuments();\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar\">\r\n        <h1>📁 User Dashboard</h1>\r\n        <div className=\"user-info\">\r\n          <span>👤 {user.username} ({user.department})</span>\r\n          <button className=\"btn btn-danger\" onClick={onLogout}>\r\n            Logout\r\n          </button>\r\n        </div>\r\n      </nav>\r\n\r\n      <div className=\"container\">\r\n        {error && (\r\n          <div className=\"alert alert-danger\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"card\">\r\n          <h3>📤 Upload Document</h3>\r\n          <UploadForm \r\n            userDepartment={user.department} \r\n            onUploadSuccess={handleUploadSuccess}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <h3>📋 My Department Documents ({user.department})</h3>\r\n          \r\n          {documents.length === 0 ? (\r\n            <p>No documents found in your department.</p>\r\n          ) : (\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Document Name</th>\r\n                  <th>Department</th>\r\n                  <th>Modified By</th>\r\n                  <th>Last Updated</th>\r\n                  <th>Actions</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {documents.map(doc => (\r\n                  <tr key={doc.id}>\r\n                    <td>📄 {doc.name}</td>\r\n                    <td>{doc.department}</td>\r\n                    <td>{doc.modified_by_username || 'System'}</td>\r\n                    <td>{new Date(doc.updated_at).toLocaleString()}</td>\r\n                    <td>\r\n                      <button \r\n                        className=\"btn\" \r\n                        onClick={() => handleDownload(doc.id, doc.name)}\r\n                      >\r\n                        Download\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"card\">\r\n          <h3>📊 Quick Stats</h3>\r\n          <div style={{ display: 'grid', gridTemplateColumns: 'repeat(auto-fit, minmax(200px, 1fr))', gap: '20px' }}>\r\n            <div style={{ textAlign: 'center', padding: '20px', background: '#e7f3ff', borderRadius: '8px' }}>\r\n              <h2 style={{ margin: '0', color: '#0066cc' }}>{documents.length}</h2>\r\n              <p style={{ margin: '5px 0 0 0' }}>Available Documents</p>\r\n            </div>\r\n            <div style={{ textAlign: 'center', padding: '20px', background: '#f0f9e7', borderRadius: '8px' }}>\r\n              <h2 style={{ margin: '0', color: '#28a745' }}>{user.department}</h2>\r\n              <p style={{ margin: '5px 0 0 0' }}>Your Department</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserDashboard;"],"names":["_ref","userDepartment","onUploadSuccess","selectedFiles","setSelectedFiles","useState","department","setDepartment","uploading","setUploading","uploadProgress","setUploadProgress","message","setMessage","dragActive","setDragActive","fileInputRef","useRef","maxFileSize","allowedTypes","useMemo","validateFile","useCallback","file","errors","size","push","name","fileExtension","split","pop","toLowerCase","includes","join","handleFiles","files","fileList","Array","from","validFiles","forEach","fileErrors","length","some","existingFile","id","Date","now","Math","random","type","status","prev","handleDrag","e","preventDefault","stopPropagation","handleDrop","dataTransfer","formatFileSize","bytes","i","floor","log","parseFloat","pow","toFixed","uploadSingleFile","async","formData","FormData","append","fileData","token","localStorage","getItem","success","data","axios","post","headers","onUploadProgress","progressEvent","progress","round","loaded","total","error","_error$response","_error$response$data","response","detail","_jsxs","className","children","onSubmit","results","successCount","errorCount","map","result","setTimeout","filter","style","marginBottom","_jsx","display","fontWeight","value","onChange","target","width","padding","border","borderRadius","fontSize","required","dept","onDragEnter","onDragLeave","onDragOver","onDrop","onClick","_fileInputRef$current","current","click","textAlign","cursor","backgroundColor","transition","margin","color","textDecoration","ref","multiple","accept","justifyContent","alignItems","clearAllFiles","background","maxHeight","overflowY","borderBottom","marginRight","fileName","flex","minWidth","whiteSpace","overflow","textOverflow","undefined","marginTop","height","marginLeft","removeFile","fileId","newProgress","title","gap","disabled","_Fragment","f","reduce","sum","paddingLeft","user","onLogout","documents","setDocuments","loading","setLoading","setError","fetchDocuments","get","Authorization","console","useEffect","username","UploadForm","handleUploadSuccess","doc","modified_by_username","updated_at","toLocaleString","docId","filename","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","remove","alert","handleDownload","gridTemplateColumns"],"sourceRoot":""}